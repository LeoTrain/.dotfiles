#!/bin/bash

repos=( "$HOME/.dotfiles" )
for dir in "$HOME/lab"/*/; do
	[ -d "$dir" ] && repos+=( "$dir" )
done

check_dir_existence() {
  local dir="$1"
  local dir_name="$(basename "$dir")"
  if [ ! -d "$dir" ]; then
	$SECHO "${RED}‚úñ ERROR: No directory found at ${dir_name}.${RESET}"
	exit 1
  fi
}

check_uncommitted_changes() {
  local dir="$1"
  local dir_name
  dir_name="$(basename "$dir")"
  check_dir_existence "$dir"

  cd "$dir" || return 1

  if ! git diff --quiet --exit-code; then
    $SECHO "${YELLOW}‚úèÔ∏è You have uncommitted changes in ${dir_name}${RESET}"
    git diff --name-only | sed 's/^/   [ /; s/$/ ]/'
    return 1
  fi

  untracked=$(git ls-files --others --exclude-standard)
  if [ -n "$untracked" ]; then
    $SECHO "${YELLOW}üÜï You have untracked files in ${dir_name}:${RESET}"
    echo "$untracked" | sed 's/^/   [ /; s/$/ ]/'
    return 1
  fi
  if git status -sb | grep -q "\[ahead"; then
    $SECHO "${YELLOW}üîº You have commits to push in ${dir_name}.${RESET}"
    return 1
  fi
  if git status -sb | grep -q "\[behind"; then
    $SECHO "${RED}üîΩ There are commits to pull in ${dir_name}.${RESET}"
    return 1
  fi
  if git status -sb | grep -q "\[diverged"; then
    $SECHO "${RED}‚ö†Ô∏è Branch has diverged in ${dir_name}.${RESET}"
    return 1
  fi
  return 0
}

result=0
for repo in "${repos[@]}"; do
  check_uncommitted_changes "$repo" || result=1
done

if [ $result -eq 0 ]; then
	$SECHO "${GREEN}‚úÖ All repositories are up-to-date.${GREEN}"
fi

exit $result
